.gitignore
1、.gitignore文件用于识别忽略文件，即不用提交的文件。分为三个层次：仓库、全局、系统；其区别在于其存放位置,仓库级别在当前仓库.git/config   全局在~/.gitconfig  系统在?
2、.gitignore文件每一行（一定要注意提行）代表一类文件的忽略。
3、#开头为注释 eg：#这是一段注释
4、“*”通配多个字符   “？”通配一个字符  eg： a*c 忽略abc、abbc   a?c 忽略abc，但是不忽略abbc
5、以/开头表示根目录，防止递归；以/结尾表示指定目录？
   bin/: 忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件
   /bin: 忽略根目录下的bin文件
   /*.c: 忽略 cat.c，不忽略 build/cat.c
   debug/*.obj: 忽略 debug/io.obj，不忽略 debug/common/io.obj 和 tools/debug/io.obj
   **/foo: 忽略/foo, a/foo, a/b/foo等
   a/**/b: 忽略a/b, a/x/b, a/x/y/b等
6、以！开头表示不过滤此项配置匹配到的文件或目录
   !/bin/run.sh: 不忽略 bin 目录下的 run.sh 文件
7、[]？
   以方括号"[]"包含单个字符的匹配列表，即匹配任何一个列在方括号中的字符。比如[abc]表示要么匹配一个a，要么匹配一个b，要么匹配一个c；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配。比如[0-9]表示匹配所有0到9的数字，[a-z]表示匹配任意的小写字母）
8、vim 到行首:按下“0”  到行尾：按下“$”
9、git config
   --local 本地仓库
   --gloabal 用户级别
   --system  系统
   --add key value  添加
   --get key value  获取
   --unset key value 删除
